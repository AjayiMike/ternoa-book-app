import clsx from "clsx";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { MouseEvent, useContext, useState } from "react";
import Book from "../components/Book";
import { AppContext } from "../contexts/appContext";
import styles from "../styles/Home.module.css";

// ipfs gateway:: https://gateway.ipfs.io/

const Home: NextPage = () => {
    const tabs = {
        myBooks: "myBooks",
        allBooks: "allbooks",
    };
    const [activeTab, setActiveTab] = useState(tabs.allBooks);

    const {books, loading} = useContext(AppContext)

    return (
        <div className="">
            <Head>
                <title>Books</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="min-h-fit container mx-auto mt-12 px-4 sm:px-0">
                <div className="flex gap-6 border-b-2">
                    <button
                        onClick={() => setActiveTab(tabs.allBooks)}
                        id="allbooks"
                        className={clsx({
                            "border-b-4 border-black":
                                activeTab === tabs.allBooks,
                        })}
                    >
                        All books
                    </button>
                    <button
                        onClick={() => setActiveTab(tabs.myBooks)}
                        id="allbooks"
                        className={clsx({
                            "border-b-4 border-black":
                                activeTab === tabs.myBooks,
                        })}
                    >
                        My books
                    </button>
                </div>
                <div className="grid gap-4 md:grid-cols-2 mt-8 mb-16">
                    {loading ? <p>loading...</p> : (
                        books.length ? books.map((book, index) => <Book key = {index} {...book} />) : <p>No Book to display</p>
                    )}
                </div>
            </main>
        </div>
    );
};

export default Home;
